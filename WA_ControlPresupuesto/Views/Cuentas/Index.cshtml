@model IEnumerable<IndiceCuentasViewModel>
@{
    ViewData["Title"] = "Cuentas";

    string FormatearBalance(decimal balance)
    {
        //return Math.Abs(balance).ToString("N");//Este servia para formato numerico, lo que hacia por ejemplo 1,000.00 es decir separador de miles y decimales con comas
        return Math.Abs(balance).ToString("C", new System.Globalization.CultureInfo("es-MX"));//Este sirve para formato moneda, lo que hace es poner el simbolo de pesos y el formato numerico
    }

    string ObtenerClaseBalace(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}

<h1>Cuentas</h1>
<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <p class="fw-bold">Activos</p>
        </div>
        <div class="activo">
            @FormatearBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>

    <div>
        <div>
            <p class="fw-bold">Pasivos</p>
        </div>
        <div class="pasivo">
            @FormatearBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <p class="fw-bold">Total</p>
        </div>
        <div class="total">
            @FormatearBalance(Model.Sum(x => x.Balance))
            @*             esto es el total de activos menos pasivos y es lo que tengo en el banco, es decir, como lo sabemos
            porque el calculo es asi: si tengo 1000 en el banco y debo 200, entonces mi total es 800 *@
        </div>
</div>
</div>
<div class="accordion acordeon-cuentas">
    @foreach (var tipoCuenta in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = $"#{id}";
                    var claseTipoCuenta = ObtenerClaseBalace(tipoCuenta.Balance);
                }
                <button class="accordion-button" 
                        type="button" 
                        data-bs-toggle="collapse" 
                        data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span class="fw-bold">@tipoCuenta.TipoCuenta</span>
                        <span class="@claseTipoCuenta">@FormatearBalance(tipoCuenta.Balance)</span>
                    </span>
                </button>
            </h2>
            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta in tipoCuenta.Cuentas)
                        {
                            var claseCuenta = ObtenerClaseBalace(cuenta.Balance);
                            <li class="list-group-item">
                                <span class="fw-bold">@cuenta.Nombre</span>
                                <span class="@claseCuenta">@FormatearBalance(cuenta.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>